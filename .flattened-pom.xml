<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>info.freelibrary</groupId>
    <artifactId>freelib-parent</artifactId>
    <version>6.6.3</version>
  </parent>
  <groupId>info.freelibrary</groupId>
  <artifactId>cantaloupe</artifactId>
  <version>4.1.7-2-SNAPSHOT</version>
  <name>docker-cantaloupe</name>
  <description>A Docker build and test framework for Cantaloupe</description>
  <url>https://github.com/uclalibrary/docker-cantaloupe</url>
  <licenses>
    <license>
      <name>The 3-Clause BSD License</name>
      <url>https://opensource.org/licenses/BSD-3-clause</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>ksclarke</id>
      <name>Kevin S. Clarke</name>
      <email>ksclarke@ksclarke.io</email>
      <organization>UCLA Library</organization>
      <organizationUrl>http://github.com/uclalibrary</organizationUrl>
      <timezone>America/New_York</timezone>
    </developer>
    <developer>
      <id>cachemeoutside</id>
      <name>Anthony Vuong</name>
      <email>avuong@cachemeoutside.io</email>
      <organization>UCLA Library</organization>
      <organizationUrl>http://github.com/uclalibrary</organizationUrl>
      <timezone>America/Los_Angeles</timezone>
    </developer>
    <developer>
      <id>markmatney</id>
      <name>Mark A. Matney, Jr.</name>
      <email>mmatney@library.ucla.edu</email>
      <organization>UCLA Library</organization>
      <organizationUrl>http://github.com/uclalibrary</organizationUrl>
      <timezone>America/Los_Angeles</timezone>
    </developer>
    <developer>
      <id>DRickard</id>
      <name>David Rickard</name>
      <email>drickard1967@library.ucla.edu</email>
      <organization>UCLA Library</organization>
      <organizationUrl>http://github.com/uclalibrary</organizationUrl>
      <timezone>America/Los_Angeles</timezone>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:uclalibrary/docker-cantaloupe.git</connection>
    <developerConnection>scm:git:git@github.com:uclalibrary/docker-cantaloupe.git</developerConnection>
    <url>git@github.com:uclalibrary/docker-cantaloupe.git</url>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/uclalibrary/docker-cantaloupe/issues</url>
  </issueManagement>
  <properties>
    <ubuntu.tag>20.04</ubuntu.tag>
    <kakadu.version></kakadu.version>
    <imagemagick.version>8:6.9.10.23+dfsg-2.1ubuntu11.2</imagemagick.version>
    <docker.showLogs>true</docker.showLogs>
    <libtiff.version>4.1.0+git191117-2build1</libtiff.version>
    <build.essential.version>12.8ubuntu1.1</build.essential.version>
    <freelib.maven.version>0.1.2</freelib.maven.version>
    <libturbojpeg.version>2.0.3-0ubuntu1.20.04.1</libturbojpeg.version>
    <wget.version>1.20.3-1ubuntu1</wget.version>
    <docker.registry.username></docker.registry.username>
    <ffmpeg.version>7:4.2.4-1ubuntu0.1</ffmpeg.version>
    <python2.version>2.7.17-2ubuntu4</python2.version>
    <curl.version>7.68.0-1ubuntu2.4</curl.version>
    <kakadu.git.repo>scm:git:git@github.com:uclalibrary/kakadu.git</kakadu.git.repo>
    <artifact.qualifier></artifact.qualifier>
    <json.version>20180130</json.version>
    <docker.registry.account></docker.registry.account>
    <deploy.plugin.version>2.8.2</deploy.plugin.version>
    <make.version>4.2.1-1.2</make.version>
    <scm.plugin.version>1.11.2</scm.plugin.version>
    <libopenjp2.version>2.3.1-1ubuntu4</libopenjp2.version>
    <docker.registry.password></docker.registry.password>
    <gcc.version>4:9.3.0-1ubuntu2</gcc.version>
    <openjdk.version>11.0.9.1+1-0ubuntu1~20.04</openjdk.version>
    <logLevel>ERROR</logLevel>
    <admin.password></admin.password>
    <image.root>src/test/resources/images/</image.root>
    <maven.download.plugin.version>1.3.0</maven.download.plugin.version>
    <testLogLevel>ERROR</testLogLevel>
    <xml.maven.plugin.version>1.0.2</xml.maven.plugin.version>
    <cantaloupe.version>4.1.7</cantaloupe.version>
    <docker.cleanup>remove</docker.cleanup>
    <codacy.plugin.version>1.2.0</codacy.plugin.version>
    <jsoup.version>1.13.1</jsoup.version>
    <graphicsmagick.version>1.4+really1.3.35-1</graphicsmagick.version>
    <docker.maven.plugin.version>0.33.0</docker.maven.plugin.version>
    <zip.version>3.0-11build1</zip.version>
    <freelib.utils.version>2.1.0</freelib.utils.version>
    <unzip.version>6.0-25ubuntu1</unzip.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>info.freelibrary</groupId>
      <artifactId>freelib-utils</artifactId>
      <version>${freelib.utils.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>${jsoup.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${json.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>images/*.tif</exclude>
          <exclude>images/*.jpx</exclude>
          <exclude>images/*.png</exclude>
          <exclude>images/*.jpg</exclude>
          <exclude>images/*.gif</exclude>
          <exclude>images/*.jp2</exclude>
          <exclude>*.enc</exclude>
        </excludes>
      </testResource>
      <testResource>
        <filtering>true</filtering>
        <directory>${basedir}</directory>
        <includes>
          <include>logback-test.xml</include>
        </includes>
        <excludes>
          <exclude>images/*.tif</exclude>
          <exclude>images/*.jpx</exclude>
          <exclude>images/*.png</exclude>
          <exclude>images/*.jpg</exclude>
          <exclude>images/*.gif</exclude>
          <exclude>images/*.jp2</exclude>
          <exclude>*.enc</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgs>
            <arg>-Xlint:all</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${deploy.plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>info.freelibrary</groupId>
        <artifactId>freelib-maven-plugins</artifactId>
        <version>${freelib.maven.version}</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>generate-codes</goal>
            </goals>
            <configuration>
              <generatedSourcesDirectory>src/main/generated</generatedSourcesDirectory>
              <messageFiles>
                <messageFile>src/main/resources/cantaloupe_messages.xml</messageFile>
              </messageFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>site-javadocs</id>
            <phase>site</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>info.freelibrary</groupId>
            <artifactId>freelib-resources</artifactId>
            <version>${freelib.resources.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <stylesheetfile>javadocs.css</stylesheetfile>
          <nonavbar>true</nonavbar>
          <show>public</show>
          <nosince>true</nosince>
          <notimestamp>true</notimestamp>
          <bottom>Â </bottom>
          <detectLinks>false</detectLinks>
          <additionalJOptions>
            <additionalJOption>-J-Dhttp.agent=maven-javadoc-plugin-${project.name}</additionalJOption>
          </additionalJOptions>
          <links>
            <link>https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/</link>
          </links>
          <sourcepath>src/main/java:src/main/generated</sourcepath>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <suppressionsLocation>src/main/tools/checkstyle/checkstyle-suppressions-override.xml</suppressionsLocation>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[1.11.0,)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>${maven.download.plugin.version}</version>
        <executions>
          <execution>
            <id>install-test-images</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://s3.amazonaws.com/ksclarke-data/jiiify-image-test-images.zip</url>
              <unpack>true</unpack>
              <outputDirectory>src/test/resources/images</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>${xml.maven.plugin.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>validate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <validationSets>
            <validationSet>
              <dir>src/main/resources</dir>
              <includes>cantaloupe_messages.xml</includes>
            </validationSet>
            <validationSet>
              <dir>src/test/resources</dir>
              <includes>logback-test.xml</includes>
            </validationSet>
          </validationSets>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>publishedBuild</id>
      <activation>
        <property>
          <name>!versions</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker.maven.plugin.version}</version>
            <executions>
              <execution>
                <id>docker-build</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-deploy</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <logStdout>true</logStdout>
              <verbose>true</verbose>
              <images>
                <image>
                  <name>${docker.image}</name>
                  <build>
                    <dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
                  </build>
                  <run>
                    <ports>
                      <port>${http.port}:8182</port>
                    </ports>
                    <volumes>
                      <bind>
                        <volume>${image.root}:/imageroot/</volume>
                      </bind>
                    </volumes>
                    <env>
                      <CANTALOUPE_ENDPOINT_ADMIN_ENABLED>true</CANTALOUPE_ENDPOINT_ADMIN_ENABLED>
                      <CANTALOUPE_ENDPOINT_ADMIN_SECRET>${admin.password}</CANTALOUPE_ENDPOINT_ADMIN_SECRET>
                    </env>
                    <wait>
                      <http>
                        <url>http://localhost:${http.port}</url>
                        <method>GET</method>
                        <status>200</status>
                      </http>
                    </wait>
                  </run>
                </image>
              </images>
              <authConfig>
                <username>${docker.registry.username}</username>
                <password>${docker.registry.password}</password>
              </authConfig>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <executions>
              <execution>
                <id>functional-tests</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/*FT.java</include>
                    <include>**/*IT.java</include>
                  </includes>
                  <excludes>
                    <exclude>**/*Test.java</exclude>
                  </excludes>
                  <argLine>${jacoco.agent.arg}</argLine>
                  <systemPropertyVariables>
                    <cantaloupe.version>${cantaloupe.version}</cantaloupe.version>
                    <http.port>${http.port}</http.port>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <excludes>
                <exclude>**/*</exclude>
              </excludes>
              <forkCount>1</forkCount>
              <useSystemClassLoader>false</useSystemClassLoader>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>kakadu</id>
      <activation>
        <property>
          <name>kakadu.version</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-scm-plugin</artifactId>
            <version>${scm.plugin.version}</version>
            <executions>
              <execution>
                <id>kakadu-checkout</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
                <configuration>
                  <checkoutDirectory>${basedir}/src/main/docker/kakadu</checkoutDirectory>
                  <connectionUrl>${kakadu.git.repo}</connectionUrl>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <artifact.qualifier>-ucla</artifact.qualifier>
      </properties>
    </profile>
    <profile>
      <id>versions</id>
      <activation>
        <property>
          <name>versions</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.33.0</version>
            <executions>
              <execution>
                <id>docker-build</id>
                <phase>validate</phase>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <logStdout>true</logStdout>
                  <verbose>true</verbose>
                  <images>
                    <image>
                      <name>cantaloupe-versions:latest</name>
                      <build>
                        <from>ubuntu:20.04</from>
                        <assembly>
                          <descriptorRef>project</descriptorRef>
                        </assembly>
                        <runCmds>
                          <shell>/maven/src/main/docker/scripts/show_versions.sh</shell>
                        </runCmds>
                        <entryPoint>tail -f /dev/null</entryPoint>
                      </build>
                    </image>
                  </images>
                  <authConfig>
                    <username>servicesbot</username>
                    <password>Gy_8k7hTy9BWm5A_Z!</password>
                  </authConfig>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <logStdout>true</logStdout>
              <verbose>true</verbose>
              <images>
                <image>
                  <name>cantaloupe-versions:latest</name>
                  <build>
                    <from>ubuntu:20.04</from>
                    <assembly>
                      <descriptorRef>project</descriptorRef>
                    </assembly>
                    <runCmds>
                      <shell>/maven/src/main/docker/scripts/show_versions.sh</shell>
                    </runCmds>
                    <entryPoint>tail -f /dev/null</entryPoint>
                  </build>
                </image>
              </images>
              <authConfig>
                <username>servicesbot</username>
                <password>Gy_8k7hTy9BWm5A_Z!</password>
              </authConfig>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>devBuild</id>
      <activation>
        <property>
          <name>devBuild</name>
        </property>
      </activation>
      <properties>
        <cantaloupe.commit.ref>latest</cantaloupe.commit.ref>
        <docker.image>${docker.registry.account}${project.artifactId}${artifact.qualifier}:latest-dev</docker.image>
        <cantaloupe.version>dev</cantaloupe.version>
      </properties>
    </profile>
    <profile>
      <activation>
        <property>
          <name>!devBuild</name>
        </property>
      </activation>
      <properties>
        <docker.image>${docker.registry.account}${project.artifactId}${artifact.qualifier}:%l</docker.image>
      </properties>
    </profile>
  </profiles>
</project>
